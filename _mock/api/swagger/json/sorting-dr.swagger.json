{
  "swagger": "2.0",
  "info": {
    "title": "SDS - Kengic Soring Dr HTTP API",
    "description": "The Core Microservice HTTP API. This is a Data-Driven/CRUD microservice sample",
    "version": "v1"
  },
  "paths": {
    "/api/v1/ExceptionShute/GetValues": {
      "get": {
        "tags": ["ExceptionShute"],
        "summary": "GetValues.",
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "query",
            "name": "pageSize",
            "description": "pageSize.",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "pageIndex",
            "description": "pageIndex.",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "Id",
            "description": "Gets or sets the identifier.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "ExceptionCode",
            "description": "Gets or sets the exception code.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "Shute",
            "description": "Gets or sets the shute.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "Description",
            "description": "Gets or sets the description.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "LogicalSorter",
            "description": "Gets or sets the logical sorter.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "CreateBy",
            "description": "Gets or sets who create this object.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "CreateTime",
            "description": "Gets or sets the create time.",
            "type": "string",
            "format": "date-time"
          },
          {
            "in": "query",
            "name": "UpdateBy",
            "description": "Gets or sets who update this object.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "UpdateTime",
            "description": "Gets or sets the update time.",
            "type": "string",
            "format": "date-time"
          },
          {
            "in": "query",
            "name": "Comments",
            "description": "Gets or sets the comments.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ExceptionShutePageResponseResult"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [{}]
      }
    },
    "/api/v1/ExceptionShute/Create": {
      "post": {
        "tags": ["ExceptionShute"],
        "summary": "Create.",
        "consumes": ["application/json", "text/json", "application/*+json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/ExceptionShuteCreateValueModelDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/StringResponseResult"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [{}]
      }
    },
    "/api/v1/ExceptionShute/Update": {
      "put": {
        "tags": ["ExceptionShute"],
        "summary": "Update.",
        "consumes": ["application/json", "text/json", "application/*+json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/ExceptionShuteUpdateValueModelDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/StringResponseResult"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [{}]
      }
    },
    "/api/v1/ExceptionShute/Delete": {
      "put": {
        "tags": ["ExceptionShute"],
        "summary": "Delete.",
        "consumes": ["application/json", "text/json", "application/*+json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/ExceptionShuteDeleteValueModelDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/StringResponseResult"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [{}]
      }
    },
    "/api/v1/ExceptionShute/Import": {
      "post": {
        "tags": ["ExceptionShute"],
        "summary": "Import.",
        "consumes": ["application/json", "text/json", "application/*+json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ExceptionShuteImportValueModelDto"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Int32ResponseResult"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [{}]
      }
    },
    "/": {
      "get": {
        "tags": ["Home"],
        "summary": "Gets the index.",
        "produces": ["text/plain", "application/json", "text/json"],
        "responses": {
          "302": {
            "description": "Redirect"
          },
          "default": {
            "description": "Unexpected Error",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v1/Induct/GetValueByLogicalSorter": {
      "get": {
        "tags": ["Induct"],
        "summary": "GetValueByLogicalSorter.",
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "query",
            "name": "logicalSorter",
            "description": "logicalSorter.",
            "type": "string",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/InductListResponseResult"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [{}]
      }
    },
    "/api/v1/Induct/Create": {
      "post": {
        "tags": ["Induct"],
        "summary": "Create.",
        "consumes": ["application/json", "text/json", "application/*+json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/InductDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/StringResponseResult"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [{}]
      }
    },
    "/api/v1/Induct/Update": {
      "put": {
        "tags": ["Induct"],
        "summary": "Update.",
        "consumes": ["application/json", "text/json", "application/*+json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/InductDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/StringResponseResult"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [{}]
      }
    },
    "/api/v1/Induct/Delete": {
      "put": {
        "tags": ["Induct"],
        "summary": "Delete.",
        "consumes": ["application/json", "text/json", "application/*+json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/InductDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/StringResponseResult"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [{}]
      }
    },
    "/api/v1/LogicalDestination/GetValues": {
      "get": {
        "tags": ["LogicalDestination"],
        "summary": "GetValues.",
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "query",
            "name": "pageSize",
            "description": "pageSize.",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "pageIndex",
            "description": "pageIndex.",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "Id",
            "description": "Gets or sets the identifier.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "Code",
            "description": "Gets or sets the code.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "Name",
            "description": "Gets or sets the name.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "Description",
            "description": "Gets or sets the description.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "ParentId",
            "description": "Gets or sets the identifier of the parent.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "CreateBy",
            "description": "Gets or sets who create this object.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "CreateTime",
            "description": "Gets or sets the create time.",
            "type": "string",
            "format": "date-time"
          },
          {
            "in": "query",
            "name": "UpdateBy",
            "description": "Gets or sets who update this object.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "UpdateTime",
            "description": "Gets or sets the update time.",
            "type": "string",
            "format": "date-time"
          },
          {
            "in": "query",
            "name": "Comments",
            "description": "Gets or sets the comments.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/LogicalDestinationPageResponseResult"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [{}]
      }
    },
    "/api/v1/LogicalDestination/Create": {
      "post": {
        "tags": ["LogicalDestination"],
        "summary": "Create.",
        "consumes": ["application/json", "text/json", "application/*+json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/LogicalDestinationCreateValueModelDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/StringResponseResult"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [{}]
      }
    },
    "/api/v1/LogicalDestination/Update": {
      "put": {
        "tags": ["LogicalDestination"],
        "summary": "Update.",
        "consumes": ["application/json", "text/json", "application/*+json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/LogicalDestinationUpdateValueModelDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/StringResponseResult"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [{}]
      }
    },
    "/api/v1/LogicalDestination/Delete": {
      "put": {
        "tags": ["LogicalDestination"],
        "summary": "Delete.",
        "consumes": ["application/json", "text/json", "application/*+json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/LogicalDestinationDeleteValueModelDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/StringResponseResult"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [{}]
      }
    },
    "/api/v1/LogicalDestination/Import": {
      "post": {
        "tags": ["LogicalDestination"],
        "summary": "Import.",
        "consumes": ["application/json", "text/json", "application/*+json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/LogicalDestinationImportValueModelDto"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Int32ResponseResult"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [{}]
      }
    },
    "/api/v1/LogicalSorter/GetValueByPhysicalSorter": {
      "get": {
        "tags": ["LogicalSorter"],
        "summary": "GetValueByPhysicalSorter.",
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "query",
            "name": "physicalSorter",
            "description": "physicalSorter.",
            "type": "string",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/LogicalSorterListResponseResult"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [{}]
      }
    },
    "/api/v1/LogicalSorter/Create": {
      "post": {
        "tags": ["LogicalSorter"],
        "summary": "Create.",
        "consumes": ["application/json", "text/json", "application/*+json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/LogicalSorterDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/StringResponseResult"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [{}]
      }
    },
    "/api/v1/LogicalSorter/Update": {
      "put": {
        "tags": ["LogicalSorter"],
        "summary": "Update.",
        "consumes": ["application/json", "text/json", "application/*+json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/LogicalSorterDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/StringResponseResult"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [{}]
      }
    },
    "/api/v1/LogicalSorter/Delete": {
      "put": {
        "tags": ["LogicalSorter"],
        "summary": "Delete.",
        "consumes": ["application/json", "text/json", "application/*+json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/LogicalSorterDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/StringResponseResult"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [{}]
      }
    },
    "/api/v1/OperatedTracing/GetValues": {
      "get": {
        "tags": ["OperatedTracing"],
        "summary": "GetValues.",
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "query",
            "name": "pageSize",
            "description": "pageSize.",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "pageIndex",
            "description": "pageIndex.",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "Id",
            "description": "Gets or sets the identifier.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "Action",
            "description": "Gets or sets the action.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "Content",
            "description": "Gets or sets the content.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "Operator",
            "description": "Gets or sets the operator.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "OperatoedTime",
            "description": "Gets or sets the operatoed time.",
            "type": "string",
            "format": "date-time"
          },
          {
            "in": "query",
            "name": "Comments",
            "description": "Gets or sets the comments.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/OperatedTracingPageResponseResult"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [{}]
      }
    },
    "/api/v1/OperatedTracing/Deletes": {
      "put": {
        "tags": ["OperatedTracing"],
        "summary": "Deletes.",
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "query",
            "name": "ids",
            "description": "ids.",
            "type": "string",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Int32ResponseResult"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [{}]
      }
    },
    "/api/v1/PhysicalSorter/GetValues": {
      "get": {
        "tags": ["PhysicalSorter"],
        "summary": "GetValues.",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PhysicalSorterPageResponseResult"
            }
          }
        }
      }
    },
    "/api/v1/PhysicalSorter/Create": {
      "post": {
        "tags": ["PhysicalSorter"],
        "summary": "Create.",
        "consumes": ["application/json", "text/json", "application/*+json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/PhysicalSorterDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/StringResponseResult"
            }
          }
        }
      }
    },
    "/api/v1/PhysicalSorter/Update": {
      "put": {
        "tags": ["PhysicalSorter"],
        "summary": "Update.",
        "consumes": ["application/json", "text/json", "application/*+json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/PhysicalSorterDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/StringResponseResult"
            }
          }
        }
      }
    },
    "/api/v1/PhysicalSorter/Delete": {
      "put": {
        "tags": ["PhysicalSorter"],
        "summary": "Delete.",
        "consumes": ["application/json", "text/json", "application/*+json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/PhysicalSorterDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/StringResponseResult"
            }
          }
        }
      }
    },
    "/api/v1/Routing/GetValues": {
      "get": {
        "tags": ["Routing"],
        "summary": "GetValues.",
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "query",
            "name": "pageSize",
            "description": "pageSize.",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "pageIndex",
            "description": "pageIndex.",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "Id",
            "description": "Gets or sets the identifier.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "Description",
            "description": "Gets or sets the description.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "SortingPlan",
            "description": "Gets or sets the sorting plan.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "Shute",
            "description": "Gets or sets the shute.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "LogicalDestination",
            "description": "Gets or sets the logical destination.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "Priority",
            "description": "Gets or sets the priority.",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "RoutingStrategy",
            "description": "Gets or sets the routing strategy.",
            "type": "string",
            "enum": ["WaterFall", "Average"]
          },
          {
            "in": "query",
            "name": "CreateBy",
            "description": "Gets or sets who create this object.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "CreateTime",
            "description": "Gets or sets the create time.",
            "type": "string",
            "format": "date-time"
          },
          {
            "in": "query",
            "name": "UpdateBy",
            "description": "Gets or sets who update this object.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "UpdateTime",
            "description": "Gets or sets the update time.",
            "type": "string",
            "format": "date-time"
          },
          {
            "in": "query",
            "name": "Comments",
            "description": "Gets or sets the comments.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/RoutingPageResponseResult"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [{}]
      }
    },
    "/api/v1/Routing/Create": {
      "post": {
        "tags": ["Routing"],
        "summary": "Create.",
        "consumes": ["application/json", "text/json", "application/*+json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/RoutingCreateValueModelDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/StringResponseResult"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [{}]
      }
    },
    "/api/v1/Routing/Update": {
      "put": {
        "tags": ["Routing"],
        "summary": "Update.",
        "consumes": ["application/json", "text/json", "application/*+json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/RoutingUpdateValueModelDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/StringResponseResult"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [{}]
      }
    },
    "/api/v1/Routing/Delete": {
      "put": {
        "tags": ["Routing"],
        "summary": "Delete.",
        "consumes": ["application/json", "text/json", "application/*+json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/RoutingDeleteValueModelDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/StringResponseResult"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [{}]
      }
    },
    "/api/v1/Routing/Import": {
      "post": {
        "tags": ["Routing"],
        "summary": "Import.",
        "consumes": ["application/json", "text/json", "application/*+json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RoutingImportValueModelDto"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Int32ResponseResult"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [{}]
      }
    },
    "/api/v1/Scanner/GetValueByLogicalSorter": {
      "get": {
        "tags": ["Scanner"],
        "summary": "GetValueByLogicalSorter.",
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "query",
            "name": "logicalSorter",
            "description": "logicalSorter.",
            "type": "string",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ScannerListResponseResult"
            }
          }
        }
      }
    },
    "/api/v1/Scanner/Create": {
      "post": {
        "tags": ["Scanner"],
        "summary": "Create.",
        "consumes": ["application/json", "text/json", "application/*+json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/ScannerDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/StringResponseResult"
            }
          }
        }
      }
    },
    "/api/v1/Scanner/Update": {
      "put": {
        "tags": ["Scanner"],
        "summary": "Update.",
        "consumes": ["application/json", "text/json", "application/*+json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/ScannerDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/StringResponseResult"
            }
          }
        }
      }
    },
    "/api/v1/Scanner/Delete": {
      "put": {
        "tags": ["Scanner"],
        "summary": "Delete.",
        "consumes": ["application/json", "text/json", "application/*+json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/ScannerDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/StringResponseResult"
            }
          }
        }
      }
    },
    "/api/v1/Shute/GetValues": {
      "get": {
        "tags": ["Shute"],
        "summary": "GetValues.",
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "query",
            "name": "pageSize",
            "description": "pageSize.",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "pageIndex",
            "description": "pageIndex.",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "Id",
            "description": "Gets or sets the identifier.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "Name",
            "description": "Gets or sets the name.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "Code",
            "description": "Gets or sets the code.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "Description",
            "description": "Gets or sets the description.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "ShuteType",
            "description": "Gets or sets the type of the shute.",
            "type": "string",
            "enum": ["Auto", "Manaul", "Reject", "Special"]
          },
          {
            "in": "query",
            "name": "DeviceName",
            "description": "Gets or sets the name of the device.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "IsEnable",
            "description": "Gets or sets a value indicating whether this object is enable.",
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "IsFull",
            "description": "Gets or sets a value indicating whether this object is full.",
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "IsActive",
            "description": "Gets or sets a value indicating whether this object is active.",
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "IsBind",
            "description": "Gets or sets a value indicating whether this object is bind.",
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "Priority",
            "description": "Gets or sets the priority.",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "LogicalSorter",
            "description": "Gets or sets the logical sorter.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "CreateBy",
            "description": "Gets or sets who create this object.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "CreateTime",
            "description": "Gets or sets the create time.",
            "type": "string",
            "format": "date-time"
          },
          {
            "in": "query",
            "name": "UpdateBy",
            "description": "Gets or sets who update this object.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "UpdateTime",
            "description": "Gets or sets the update time.",
            "type": "string",
            "format": "date-time"
          },
          {
            "in": "query",
            "name": "Comments",
            "description": "Gets or sets the comments.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ShutePageResponseResult"
            }
          }
        }
      }
    },
    "/api/v1/Shute/Create": {
      "post": {
        "tags": ["Shute"],
        "summary": "Create.",
        "consumes": ["application/json", "text/json", "application/*+json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/ShuteDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/StringResponseResult"
            }
          }
        }
      }
    },
    "/api/v1/Shute/Update": {
      "put": {
        "tags": ["Shute"],
        "summary": "Update.",
        "consumes": ["application/json", "text/json", "application/*+json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/ShuteDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/StringResponseResult"
            }
          }
        }
      }
    },
    "/api/v1/Shute/Delete": {
      "put": {
        "tags": ["Shute"],
        "summary": "Delete.",
        "consumes": ["application/json", "text/json", "application/*+json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/ShuteDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/StringResponseResult"
            }
          }
        }
      }
    },
    "/api/v1/Shute/Deletes": {
      "put": {
        "tags": ["Shute"],
        "summary": "Deletes.",
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "query",
            "name": "ids",
            "description": "ids.",
            "type": "string",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/StringResponseResult"
            }
          }
        }
      }
    },
    "/api/v1/Shute/SetActiveStatus": {
      "put": {
        "tags": ["Shute"],
        "summary": "SetActiveStatus.",
        "consumes": ["application/json", "text/json", "application/*+json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/ShuteDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/StringResponseResult"
            }
          }
        }
      }
    },
    "/api/v1/Shute/SetEnableStatus": {
      "put": {
        "tags": ["Shute"],
        "summary": "SetEnableStatus.",
        "consumes": ["application/json", "text/json", "application/*+json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/ShuteDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/StringResponseResult"
            }
          }
        }
      }
    },
    "/api/v1/Shute/SetFullStatus": {
      "put": {
        "tags": ["Shute"],
        "summary": "SetFullStatus.",
        "consumes": ["application/json", "text/json", "application/*+json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/ShuteDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/StringResponseResult"
            }
          }
        }
      }
    },
    "/api/v1/Shute/SetBindStatus": {
      "put": {
        "tags": ["Shute"],
        "summary": "SetBindStatus.",
        "consumes": ["application/json", "text/json", "application/*+json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/ShuteDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/StringResponseResult"
            }
          }
        }
      }
    },
    "/api/v1/SortingParameter/GetAllValues": {
      "get": {
        "tags": ["SortingParameter"],
        "summary": "GetAllValues.",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/SortingParameterPageResponseResult"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [{}]
      }
    },
    "/api/v1/SortingParameter/Update": {
      "put": {
        "tags": ["SortingParameter"],
        "summary": "Update.",
        "consumes": ["application/json", "text/json", "application/*+json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/SortingParameterUpdateValueModelDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/StringResponseResult"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [{}]
      }
    },
    "/api/v1/SortingPlan/GetValues": {
      "get": {
        "tags": ["SortingPlan"],
        "summary": "GetValues.",
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "query",
            "name": "pageSize",
            "description": "pageSize.",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "pageIndex",
            "description": "pageIndex.",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "Id",
            "description": "Gets or sets the identifier.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "Name",
            "description": "Gets or sets the name.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "Code",
            "description": "Gets or sets the code.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "Description",
            "description": "Gets or sets the description.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "IsEnable",
            "description": "Gets or sets a value indicating whether this object is enable.",
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "IsActive",
            "description": "Gets or sets a value indicating whether this object is active.",
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "CreateBy",
            "description": "Gets or sets who create this object.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "TheLastestBeginTime",
            "description": "Gets or sets the lastest begin time.",
            "type": "string",
            "format": "date-time"
          },
          {
            "in": "query",
            "name": "TheLastestEndTime",
            "description": "Gets or sets the lastest end time.",
            "type": "string",
            "format": "date-time"
          },
          {
            "in": "query",
            "name": "TotalTime",
            "description": "Gets or sets the total time.",
            "type": "number",
            "format": "double"
          },
          {
            "in": "query",
            "name": "UsedPercent",
            "description": "Gets or sets the used percent.",
            "type": "number",
            "format": "double"
          },
          {
            "in": "query",
            "name": "CreateTime",
            "description": "Gets or sets the create time.",
            "type": "string",
            "format": "date-time"
          },
          {
            "in": "query",
            "name": "UpdateBy",
            "description": "Gets or sets who update this object.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "UpdateTime",
            "description": "Gets or sets the update time.",
            "type": "string",
            "format": "date-time"
          },
          {
            "in": "query",
            "name": "Comments",
            "description": "Gets or sets the comments.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/SortingPlanPageResponseResult"
            }
          }
        }
      }
    },
    "/api/v1/SortingPlan/Create": {
      "post": {
        "tags": ["SortingPlan"],
        "summary": "Create.",
        "consumes": ["application/json", "text/json", "application/*+json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/SortingPlanDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/StringResponseResult"
            }
          }
        }
      }
    },
    "/api/v1/SortingPlan/Update": {
      "put": {
        "tags": ["SortingPlan"],
        "summary": "Update.",
        "consumes": ["application/json", "text/json", "application/*+json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/SortingPlanDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/StringResponseResult"
            }
          }
        }
      }
    },
    "/api/v1/SortingPlan/Delete": {
      "put": {
        "tags": ["SortingPlan"],
        "summary": "Delete.",
        "consumes": ["application/json", "text/json", "application/*+json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/SortingPlanDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/StringResponseResult"
            }
          }
        }
      }
    },
    "/api/v1/SortingPlan/SetActiveStatus": {
      "put": {
        "tags": ["SortingPlan"],
        "summary": "SetActiveStatus.",
        "consumes": ["application/json", "text/json", "application/*+json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/SortingPlanDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/StringResponseResult"
            }
          }
        }
      }
    },
    "/api/v1/SortingPlan/SetEnableStatus": {
      "put": {
        "tags": ["SortingPlan"],
        "summary": "SetEnableStatus.",
        "consumes": ["application/json", "text/json", "application/*+json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/SortingPlanDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/StringResponseResult"
            }
          }
        }
      }
    },
    "/api/v1/SortingPlan/Import": {
      "post": {
        "tags": ["SortingPlan"],
        "summary": "Import.",
        "consumes": ["application/json", "text/json", "application/*+json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SortingPlanDto"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Int32ResponseResult"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "ExceptionShute": {
      "description": "ExceptionShute.",
      "type": "object",
      "properties": {
        "id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        },
        "exceptionCode": {
          "description": "Gets or sets the exception code.",
          "type": "string"
        },
        "shute": {
          "description": "Gets or sets the shute.",
          "type": "string"
        },
        "description": {
          "description": "Gets or sets the description.",
          "type": "string"
        },
        "logicalSorter": {
          "description": "Gets or sets the logical sorter.",
          "type": "string"
        },
        "createBy": {
          "description": "Gets or sets who create this object.",
          "type": "string"
        },
        "createTime": {
          "format": "date-time",
          "description": "Gets or sets the create time.",
          "type": "string"
        },
        "updateBy": {
          "description": "Gets or sets who update this object.",
          "type": "string"
        },
        "updateTime": {
          "format": "date-time",
          "description": "Gets or sets the update time.",
          "type": "string"
        },
        "comments": {
          "description": "Gets or sets the comments.",
          "type": "string"
        }
      }
    },
    "ExceptionShutePage": {
      "type": "object",
      "properties": {
        "total": {
          "format": "int32",
          "type": "integer"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExceptionShute"
          }
        }
      }
    },
    "ExceptionShutePageResponseResult": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/ExceptionShutePage"
        },
        "state": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "ExceptionShuteCreateValueModelDto": {
      "description": "ExceptionShuteCreateValueModelDto.",
      "type": "object",
      "properties": {
        "exceptionCode": {
          "description": "Gets or sets the exception code.",
          "type": "string"
        },
        "shute": {
          "description": "Gets or sets the shute.",
          "type": "string"
        },
        "description": {
          "description": "Gets or sets the description.",
          "type": "string"
        },
        "logicalSorter": {
          "description": "Gets or sets the logical sorter.",
          "type": "string"
        },
        "comments": {
          "description": "Gets or sets the comments.",
          "type": "string"
        }
      }
    },
    "StringResponseResult": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string"
        },
        "state": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "ExceptionShuteUpdateValueModelDto": {
      "description": "ExceptionShuteUpdateValueModelDto.",
      "type": "object",
      "properties": {
        "exceptionCode": {
          "description": "Gets or sets the exception code.",
          "type": "string"
        },
        "shute": {
          "description": "Gets or sets the shute.",
          "type": "string"
        },
        "description": {
          "description": "Gets or sets the description.",
          "type": "string"
        },
        "logicalSorter": {
          "description": "Gets or sets the logical sorter.",
          "type": "string"
        },
        "comments": {
          "description": "Gets or sets the comments.",
          "type": "string"
        }
      }
    },
    "ExceptionShuteDeleteValueModelDto": {
      "description": "ExceptionShuteDeleteValueModelDto.",
      "type": "object",
      "properties": {
        "exceptionCode": {
          "description": "Gets or sets the exception code.",
          "type": "string"
        },
        "shute": {
          "description": "Gets or sets the shute.",
          "type": "string"
        },
        "logicalSorter": {
          "description": "Gets or sets the logical sorter.",
          "type": "string"
        }
      }
    },
    "ExceptionShuteImportValueModelDto": {
      "description": "ExceptionShuteImportValueModelDto.",
      "type": "object",
      "properties": {
        "exceptionCode": {
          "description": "Gets or sets the exception code.",
          "type": "string"
        },
        "shute": {
          "description": "Gets or sets the shute.",
          "type": "string"
        },
        "description": {
          "description": "Gets or sets the description.",
          "type": "string"
        },
        "logicalSorter": {
          "description": "Gets or sets the logical sorter.",
          "type": "string"
        },
        "comments": {
          "description": "Gets or sets the comments.",
          "type": "string"
        },
        "updateBy": {
          "description": "Gets or sets who update this object.",
          "type": "string"
        }
      }
    },
    "Int32ResponseResult": {
      "type": "object",
      "properties": {
        "data": {
          "format": "int32",
          "type": "integer"
        },
        "state": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "ProblemDetails": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "status": {
          "format": "int32",
          "type": "integer"
        },
        "detail": {
          "type": "string"
        },
        "instance": {
          "type": "string"
        },
        "extensions": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          },
          "readOnly": true
        }
      }
    },
    "Induct": {
      "description": "Induct.",
      "type": "object",
      "properties": {
        "id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        },
        "name": {
          "description": "Gets or sets the name.",
          "type": "string"
        },
        "code": {
          "description": "Gets or sets the code.",
          "type": "string"
        },
        "description": {
          "description": "Gets or sets the description.",
          "type": "string"
        },
        "logicalSorter": {
          "description": "Gets or sets the logical sorter.",
          "type": "string"
        },
        "createBy": {
          "description": "Gets or sets who create this object.",
          "type": "string"
        },
        "createTime": {
          "format": "date-time",
          "description": "Gets or sets the create time.",
          "type": "string"
        },
        "updateBy": {
          "description": "Gets or sets who update this object.",
          "type": "string"
        },
        "updateTime": {
          "format": "date-time",
          "description": "Gets or sets the update time.",
          "type": "string"
        },
        "comments": {
          "description": "Gets or sets the comments.",
          "type": "string"
        }
      }
    },
    "InductListResponseResult": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Induct"
          }
        },
        "state": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "InductDto": {
      "description": "Class InductDto.",
      "type": "object",
      "properties": {
        "code": {
          "description": "Gets or sets the code.",
          "type": "string"
        },
        "name": {
          "description": "Gets or sets the name.",
          "type": "string"
        },
        "description": {
          "description": "Gets or sets the description.",
          "type": "string"
        },
        "logicalSorter": {
          "description": "Gets or sets the logical sorter.",
          "type": "string"
        },
        "comments": {
          "description": "Gets or sets the comments.",
          "type": "string"
        }
      }
    },
    "LogicalDestination": {
      "description": "LogicalDestination.",
      "type": "object",
      "properties": {
        "id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        },
        "code": {
          "description": "Gets or sets the code.",
          "type": "string"
        },
        "name": {
          "description": "Gets or sets the name.",
          "type": "string"
        },
        "description": {
          "description": "Gets or sets the description.",
          "type": "string"
        },
        "parentId": {
          "description": "Gets or sets the identifier of the parent.",
          "type": "string"
        },
        "createBy": {
          "description": "Gets or sets who create this object.",
          "type": "string"
        },
        "createTime": {
          "format": "date-time",
          "description": "Gets or sets the create time.",
          "type": "string"
        },
        "updateBy": {
          "description": "Gets or sets who update this object.",
          "type": "string"
        },
        "updateTime": {
          "format": "date-time",
          "description": "Gets or sets the update time.",
          "type": "string"
        },
        "comments": {
          "description": "Gets or sets the comments.",
          "type": "string"
        }
      }
    },
    "LogicalDestinationPage": {
      "type": "object",
      "properties": {
        "total": {
          "format": "int32",
          "type": "integer"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LogicalDestination"
          }
        }
      }
    },
    "LogicalDestinationPageResponseResult": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/LogicalDestinationPage"
        },
        "state": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "LogicalDestinationCreateValueModelDto": {
      "description": "LogicalDestinationCreateValueModelDto.",
      "type": "object",
      "properties": {
        "code": {
          "description": "Gets or sets the code.",
          "type": "string"
        },
        "name": {
          "description": "Gets or sets the name.",
          "type": "string"
        },
        "description": {
          "description": "Gets or sets the description.",
          "type": "string"
        },
        "parentId": {
          "description": "Gets or sets the identifier of the parent.",
          "type": "string"
        },
        "comments": {
          "description": "Gets or sets the comments.",
          "type": "string"
        }
      }
    },
    "LogicalDestinationUpdateValueModelDto": {
      "description": "LogicalDestinationUpdateValueModelDto.",
      "type": "object",
      "properties": {
        "code": {
          "description": "Gets or sets the code.",
          "type": "string"
        },
        "name": {
          "description": "Gets or sets the name.",
          "type": "string"
        },
        "description": {
          "description": "Gets or sets the description.",
          "type": "string"
        },
        "parentId": {
          "description": "Gets or sets the identifier of the parent.",
          "type": "string"
        },
        "comments": {
          "description": "Gets or sets the comments.",
          "type": "string"
        }
      }
    },
    "LogicalDestinationDeleteValueModelDto": {
      "description": "LogicalDestinationDeleteValueModelDto.",
      "type": "object",
      "properties": {
        "code": {
          "description": "Gets or sets the code.",
          "type": "string"
        }
      }
    },
    "LogicalDestinationImportValueModelDto": {
      "description": "LogicalDestinationImportValueModelDto.",
      "type": "object",
      "properties": {
        "code": {
          "description": "Gets or sets the code.",
          "type": "string"
        },
        "name": {
          "description": "Gets or sets the name.",
          "type": "string"
        },
        "description": {
          "description": "Gets or sets the description.",
          "type": "string"
        },
        "parentId": {
          "description": "Gets or sets the identifier of the parent.",
          "type": "string"
        },
        "comments": {
          "description": "Gets or sets the comments.",
          "type": "string"
        }
      }
    },
    "LogicalSorter": {
      "description": "LogicalSorter.",
      "type": "object",
      "properties": {
        "id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        },
        "name": {
          "description": "Gets or sets the name.",
          "type": "string"
        },
        "code": {
          "description": "Gets or sets the code.",
          "type": "string"
        },
        "description": {
          "description": "Gets or sets the description.",
          "type": "string"
        },
        "physicalSorter": {
          "description": "Gets or sets the physical sorter.",
          "type": "string"
        },
        "sortingPlan": {
          "description": "Gets or sets the sorting plan.",
          "type": "string"
        },
        "nodeId": {
          "description": "Gets or sets the identifier of the node.",
          "type": "string"
        },
        "createBy": {
          "description": "Gets or sets who create this object.",
          "type": "string"
        },
        "createTime": {
          "format": "date-time",
          "description": "Gets or sets the create time.",
          "type": "string"
        },
        "updateBy": {
          "description": "Gets or sets who update this object.",
          "type": "string"
        },
        "updateTime": {
          "format": "date-time",
          "description": "Gets or sets the update time.",
          "type": "string"
        },
        "comments": {
          "description": "Gets or sets the comments.",
          "type": "string"
        }
      }
    },
    "LogicalSorterListResponseResult": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LogicalSorter"
          }
        },
        "state": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "LogicalSorterDto": {
      "description": "Class LogicalSorterDto.",
      "type": "object",
      "properties": {
        "code": {
          "description": "Gets or sets the code.",
          "type": "string"
        },
        "name": {
          "description": "Gets or sets the name.",
          "type": "string"
        },
        "description": {
          "description": "Gets or sets the description.",
          "type": "string"
        },
        "physicalSorter": {
          "description": "Gets or sets the physical sorter.",
          "type": "string"
        },
        "sortingPlan": {
          "description": "Gets or sets the sorting plan.",
          "type": "string"
        },
        "nodeId": {
          "description": "Gets or sets the node identifier.",
          "type": "string"
        },
        "comments": {
          "description": "Gets or sets the comments.",
          "type": "string"
        }
      }
    },
    "OperatedTracing": {
      "description": "OperatedTracing.",
      "type": "object",
      "properties": {
        "id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        },
        "action": {
          "description": "Gets or sets the action.",
          "type": "string"
        },
        "content": {
          "description": "Gets or sets the content.",
          "type": "string"
        },
        "operator": {
          "description": "Gets or sets the operator.",
          "type": "string"
        },
        "operatoedTime": {
          "format": "date-time",
          "description": "Gets or sets the operatoed time.",
          "type": "string"
        },
        "comments": {
          "description": "Gets or sets the comments.",
          "type": "string"
        }
      }
    },
    "OperatedTracingPage": {
      "type": "object",
      "properties": {
        "total": {
          "format": "int32",
          "type": "integer"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OperatedTracing"
          }
        }
      }
    },
    "OperatedTracingPageResponseResult": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/OperatedTracingPage"
        },
        "state": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "PhysicalSorter": {
      "description": "A physical sorter.",
      "type": "object",
      "properties": {
        "id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        },
        "name": {
          "description": "Gets or sets the name.",
          "type": "string"
        },
        "code": {
          "description": "Gets or sets the code.",
          "type": "string"
        },
        "description": {
          "description": "Gets or sets the description.",
          "type": "string"
        },
        "createBy": {
          "description": "Gets or sets who create this object.",
          "type": "string"
        },
        "createTime": {
          "format": "date-time",
          "description": "Gets or sets the create time.",
          "type": "string"
        },
        "updateBy": {
          "description": "Gets or sets who update this object.",
          "type": "string"
        },
        "updateTime": {
          "format": "date-time",
          "description": "Gets or sets the update time.",
          "type": "string"
        },
        "comments": {
          "description": "Gets or sets the comments.",
          "type": "string"
        }
      }
    },
    "PhysicalSorterPage": {
      "type": "object",
      "properties": {
        "total": {
          "format": "int32",
          "type": "integer"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PhysicalSorter"
          }
        }
      }
    },
    "PhysicalSorterPageResponseResult": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/PhysicalSorterPage"
        },
        "state": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "PhysicalSorterDto": {
      "description": "Class PhysicalSorterDto.",
      "type": "object",
      "properties": {
        "code": {
          "description": "Gets or sets the code.",
          "type": "string"
        },
        "name": {
          "description": "Gets or sets the name.",
          "type": "string"
        },
        "description": {
          "description": "Gets or sets the description.",
          "type": "string"
        },
        "comments": {
          "description": "Gets or sets the comments.",
          "type": "string"
        }
      }
    },
    "Routing": {
      "description": "Routing.",
      "type": "object",
      "properties": {
        "id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        },
        "description": {
          "description": "Gets or sets the description.",
          "type": "string"
        },
        "sortingPlan": {
          "description": "Gets or sets the sorting plan.",
          "type": "string"
        },
        "shute": {
          "description": "Gets or sets the shute.",
          "type": "string"
        },
        "logicalDestination": {
          "description": "Gets or sets the logical destination.",
          "type": "string"
        },
        "priority": {
          "format": "int32",
          "description": "Gets or sets the priority.",
          "type": "integer"
        },
        "routingStrategy": {
          "description": "Gets or sets the routing strategy.",
          "enum": ["WaterFall", "Average"],
          "type": "string"
        },
        "createBy": {
          "description": "Gets or sets who create this object.",
          "type": "string"
        },
        "createTime": {
          "format": "date-time",
          "description": "Gets or sets the create time.",
          "type": "string"
        },
        "updateBy": {
          "description": "Gets or sets who update this object.",
          "type": "string"
        },
        "updateTime": {
          "format": "date-time",
          "description": "Gets or sets the update time.",
          "type": "string"
        },
        "comments": {
          "description": "Gets or sets the comments.",
          "type": "string"
        }
      }
    },
    "RoutingPage": {
      "type": "object",
      "properties": {
        "total": {
          "format": "int32",
          "type": "integer"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Routing"
          }
        }
      }
    },
    "RoutingPageResponseResult": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/RoutingPage"
        },
        "state": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "RoutingCreateValueModelDto": {
      "description": "RoutingCreateValueModelDto.",
      "type": "object",
      "properties": {
        "description": {
          "description": "Gets or sets the description.",
          "type": "string"
        },
        "sortingPlan": {
          "description": "Gets or sets the sorting plan.",
          "type": "string"
        },
        "shute": {
          "description": "Gets or sets the shute.",
          "type": "string"
        },
        "logicalDestination": {
          "description": "Gets or sets the logical destination.",
          "type": "string"
        },
        "comments": {
          "description": "Gets or sets the comments.",
          "type": "string"
        }
      }
    },
    "RoutingUpdateValueModelDto": {
      "description": "RoutingUpdateValueModelDto.",
      "type": "object",
      "properties": {
        "description": {
          "description": "Gets or sets the description.",
          "type": "string"
        },
        "sortingPlan": {
          "description": "Gets or sets the sorting plan.",
          "type": "string"
        },
        "shute": {
          "description": "Gets or sets the shute.",
          "type": "string"
        },
        "logicalDestination": {
          "description": "Gets or sets the logical destination.",
          "type": "string"
        },
        "comments": {
          "description": "Gets or sets the comments.",
          "type": "string"
        }
      }
    },
    "RoutingDeleteValueModelDto": {
      "description": "RoutingDeleteValueModelDto.",
      "type": "object",
      "properties": {
        "sortingPlan": {
          "description": "Gets or sets the sorting plan.",
          "type": "string"
        },
        "shute": {
          "description": "Gets or sets the shute.",
          "type": "string"
        },
        "logicalDestination": {
          "description": "Gets or sets the logical destination.",
          "type": "string"
        }
      }
    },
    "RoutingImportValueModelDto": {
      "description": "RoutingImportValueModelDto.",
      "type": "object",
      "properties": {
        "description": {
          "description": "Gets or sets the description.",
          "type": "string"
        },
        "sortingPlan": {
          "description": "Gets or sets the sorting plan.",
          "type": "string"
        },
        "shute": {
          "description": "Gets or sets the shute.",
          "type": "string"
        },
        "logicalDestination": {
          "description": "Gets or sets the logical destination.",
          "type": "string"
        },
        "comments": {
          "description": "Gets or sets the comments.",
          "type": "string"
        }
      }
    },
    "Scanner": {
      "description": "Class Scanner.",
      "type": "object",
      "properties": {
        "id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        },
        "name": {
          "description": "Gets or sets the name.",
          "type": "string"
        },
        "code": {
          "description": "Gets or sets the code.",
          "type": "string"
        },
        "description": {
          "description": "Gets or sets the description.",
          "type": "string"
        },
        "logicalSorter": {
          "description": "Gets or sets the logical sorter.",
          "type": "string"
        },
        "createBy": {
          "description": "Gets or sets the create by.",
          "type": "string"
        },
        "createTime": {
          "format": "date-time",
          "description": "Gets or sets the create time.",
          "type": "string"
        },
        "updateBy": {
          "description": "Gets or sets the update by.",
          "type": "string"
        },
        "updateTime": {
          "format": "date-time",
          "description": "Gets or sets the update time.",
          "type": "string"
        },
        "comments": {
          "description": "Gets or sets the comments.",
          "type": "string"
        }
      }
    },
    "ScannerListResponseResult": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Scanner"
          }
        },
        "state": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "ScannerDto": {
      "description": "Class ScannerDto.",
      "type": "object",
      "properties": {
        "code": {
          "description": "Gets or sets the code.",
          "type": "string"
        },
        "name": {
          "description": "Gets or sets the name.",
          "type": "string"
        },
        "description": {
          "description": "Gets or sets the description.",
          "type": "string"
        },
        "logicalSorter": {
          "description": "Gets or sets the logical sorter.",
          "type": "string"
        },
        "comments": {
          "description": "Gets or sets the comments.",
          "type": "string"
        }
      }
    },
    "Shute": {
      "description": "Shute.",
      "type": "object",
      "properties": {
        "id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        },
        "name": {
          "description": "Gets or sets the name.",
          "type": "string"
        },
        "code": {
          "description": "Gets or sets the code.",
          "type": "string"
        },
        "description": {
          "description": "Gets or sets the description.",
          "type": "string"
        },
        "shuteType": {
          "description": "Gets or sets the type of the shute.",
          "enum": ["Auto", "Manaul", "Reject", "Special"],
          "type": "string"
        },
        "deviceName": {
          "description": "Gets or sets the name of the device.",
          "type": "string"
        },
        "isEnable": {
          "description": "Gets or sets a value indicating whether this object is enable.",
          "type": "boolean"
        },
        "isFull": {
          "description": "Gets or sets a value indicating whether this object is full.",
          "type": "boolean"
        },
        "isActive": {
          "description": "Gets or sets a value indicating whether this object is active.",
          "type": "boolean"
        },
        "isBind": {
          "description": "Gets or sets a value indicating whether this object is bind.",
          "type": "boolean"
        },
        "priority": {
          "format": "int32",
          "description": "Gets or sets the priority.",
          "type": "integer"
        },
        "logicalSorter": {
          "description": "Gets or sets the logical sorter.",
          "type": "string"
        },
        "createBy": {
          "description": "Gets or sets who create this object.",
          "type": "string"
        },
        "createTime": {
          "format": "date-time",
          "description": "Gets or sets the create time.",
          "type": "string"
        },
        "updateBy": {
          "description": "Gets or sets who update this object.",
          "type": "string"
        },
        "updateTime": {
          "format": "date-time",
          "description": "Gets or sets the update time.",
          "type": "string"
        },
        "comments": {
          "description": "Gets or sets the comments.",
          "type": "string"
        }
      }
    },
    "ShutePage": {
      "type": "object",
      "properties": {
        "total": {
          "format": "int32",
          "type": "integer"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Shute"
          }
        }
      }
    },
    "ShutePageResponseResult": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/ShutePage"
        },
        "state": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "ShuteDto": {
      "description": "Class ShuteDto.",
      "type": "object",
      "properties": {
        "code": {
          "description": "Gets or sets the code.",
          "type": "string"
        },
        "name": {
          "description": "Gets or sets the name.",
          "type": "string"
        },
        "description": {
          "description": "Gets or sets the description.",
          "type": "string"
        },
        "shuteType": {
          "description": "Gets or sets the type of the shute.",
          "enum": ["Auto", "Manaul", "Reject", "Special"],
          "type": "string"
        },
        "deviceName": {
          "description": "Gets or sets the name of the device.",
          "type": "string"
        },
        "isEnable": {
          "description": "Gets or sets a value indicating whether this instance is enable.",
          "type": "boolean"
        },
        "isFull": {
          "description": "Gets or sets a value indicating whether this instance is full.",
          "type": "boolean"
        },
        "isActive": {
          "description": "Gets or sets a value indicating whether this instance is active.",
          "type": "boolean"
        },
        "isBind": {
          "description": "Gets or sets a value indicating whether this instance is bind.",
          "type": "boolean"
        },
        "priority": {
          "format": "int32",
          "description": "Gets or sets the priority.",
          "type": "integer"
        },
        "logicalSorter": {
          "description": "Gets or sets the logical sorter.",
          "type": "string"
        },
        "comments": {
          "description": "Gets or sets the comments.",
          "type": "string"
        }
      }
    },
    "SortingParameter": {
      "description": "SortingParameter.",
      "type": "object",
      "properties": {
        "id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        },
        "code": {
          "description": "Gets or sets the code.",
          "type": "string"
        },
        "name": {
          "description": "Gets or sets the name.",
          "type": "string"
        },
        "description": {
          "description": "Gets or sets the description.",
          "type": "string"
        },
        "value": {
          "description": "Gets or sets the value.",
          "type": "string"
        },
        "createBy": {
          "description": "Gets or sets who create this object.",
          "type": "string"
        },
        "createTime": {
          "format": "date-time",
          "description": "Gets or sets the create time.",
          "type": "string"
        },
        "updateBy": {
          "description": "Gets or sets who update this object.",
          "type": "string"
        },
        "updateTime": {
          "format": "date-time",
          "description": "Gets or sets the update time.",
          "type": "string"
        },
        "comments": {
          "description": "Gets or sets the comments.",
          "type": "string"
        }
      }
    },
    "SortingParameterPage": {
      "type": "object",
      "properties": {
        "total": {
          "format": "int32",
          "type": "integer"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SortingParameter"
          }
        }
      }
    },
    "SortingParameterPageResponseResult": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/SortingParameterPage"
        },
        "state": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "SortingParameterUpdateValueModelDto": {
      "description": "SortingParameterUpdateValueModelDto.",
      "type": "object",
      "properties": {
        "code": {
          "description": "Gets or sets the code.",
          "type": "string"
        },
        "name": {
          "description": "Gets or sets the name.",
          "type": "string"
        },
        "description": {
          "description": "Gets or sets the description.",
          "type": "string"
        },
        "value": {
          "description": "Gets or sets the value.",
          "type": "string"
        },
        "comments": {
          "description": "Gets or sets the comments.",
          "type": "string"
        }
      }
    },
    "SortingPlan": {
      "description": "SortingPlan.",
      "type": "object",
      "properties": {
        "id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        },
        "name": {
          "description": "Gets or sets the name.",
          "type": "string"
        },
        "code": {
          "description": "Gets or sets the code.",
          "type": "string"
        },
        "description": {
          "description": "Gets or sets the description.",
          "type": "string"
        },
        "isEnable": {
          "description": "Gets or sets a value indicating whether this object is enable.",
          "type": "boolean"
        },
        "isActive": {
          "description": "Gets or sets a value indicating whether this object is active.",
          "type": "boolean"
        },
        "createBy": {
          "description": "Gets or sets who create this object.",
          "type": "string"
        },
        "theLastestBeginTime": {
          "format": "date-time",
          "description": "Gets or sets the lastest begin time.",
          "type": "string"
        },
        "theLastestEndTime": {
          "format": "date-time",
          "description": "Gets or sets the lastest end time.",
          "type": "string"
        },
        "totalTime": {
          "format": "double",
          "description": "Gets or sets the total time.",
          "type": "number"
        },
        "usedPercent": {
          "format": "double",
          "description": "Gets or sets the used percent.",
          "type": "number"
        },
        "createTime": {
          "format": "date-time",
          "description": "Gets or sets the create time.",
          "type": "string"
        },
        "updateBy": {
          "description": "Gets or sets who update this object.",
          "type": "string"
        },
        "updateTime": {
          "format": "date-time",
          "description": "Gets or sets the update time.",
          "type": "string"
        },
        "comments": {
          "description": "Gets or sets the comments.",
          "type": "string"
        }
      }
    },
    "SortingPlanPage": {
      "type": "object",
      "properties": {
        "total": {
          "format": "int32",
          "type": "integer"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SortingPlan"
          }
        }
      }
    },
    "SortingPlanPageResponseResult": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/SortingPlanPage"
        },
        "state": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "SortingPlanDto": {
      "description": "Class SortingPlanDto.",
      "type": "object",
      "properties": {
        "code": {
          "description": "Gets or sets the code.",
          "type": "string"
        },
        "name": {
          "description": "Gets or sets the name.",
          "type": "string"
        },
        "description": {
          "description": "Gets or sets the description.",
          "type": "string"
        },
        "isEnable": {
          "description": "Gets or sets a value indicating whether this instance is enable.",
          "type": "boolean"
        },
        "isActive": {
          "description": "Gets or sets a value indicating whether this instance is active.",
          "type": "boolean"
        },
        "comments": {
          "description": "Gets or sets the comments.",
          "type": "string"
        }
      }
    }
  },
  "securityDefinitions": {
    "oauth2": {
      "type": "oauth2",
      "flow": "implicit",
      "authorizationUrl": "file:///connect/authorize",
      "tokenUrl": "file:///connect/authorize",
      "scopes": {
        "Sorter": "Sorters API"
      }
    }
  },
  "tags": [
    {
      "name": "ExceptionShute",
      "description": "ExceptionShute.\r\nImplements the Microsoft.AspNetCore.Mvc.ControllerBase."
    },
    {
      "name": "Home",
      "description": "A controller for handling homes.\r\nImplements the Microsoft.AspNetCore.Mvc.ControllerBase."
    },
    {
      "name": "Induct",
      "description": "Induct.\r\nImplements the Microsoft.AspNetCore.Mvc.ControllerBase."
    },
    {
      "name": "LogicalDestination",
      "description": "LogicalDestination.\r\nImplements the Microsoft.AspNetCore.Mvc.ControllerBase."
    },
    {
      "name": "LogicalSorter",
      "description": "LogicalSorter.\r\nImplements the Microsoft.AspNetCore.Mvc.ControllerBase."
    },
    {
      "name": "OperatedTracing",
      "description": "OperatedTracing.\r\nImplements the Microsoft.AspNetCore.Mvc.ControllerBase."
    },
    {
      "name": "PhysicalSorter",
      "description": "PhysicalSorter."
    },
    {
      "name": "Routing",
      "description": "Routing.\r\nImplements the Microsoft.AspNetCore.Mvc.ControllerBase."
    },
    {
      "name": "Scanner",
      "description": "Scanner."
    },
    {
      "name": "Shute",
      "description": "Shute."
    },
    {
      "name": "SortingParameter",
      "description": "SortingParameter.\r\nImplements the Microsoft.AspNetCore.Mvc.ControllerBase."
    },
    {
      "name": "SortingPlan",
      "description": "SortingPlan."
    }
  ]
}
